/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as rootDImport } from './routes/__root.d'
import { Route as UsernameLazyDImport } from './routes/username.lazy.d'
import { Route as LoginLazyDImport } from './routes/login.lazy.d'
import { Route as IndexLazyDImport } from './routes/index.lazy.d'

// Create Virtual Routes

const UsernameLazyImport = createFileRoute('/username')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const rootDRoute = rootDImport.update({
  path: '/d',
  getParentRoute: () => rootRoute,
} as any)

const UsernameLazyRoute = UsernameLazyImport.update({
  path: '/username',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/username.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UsernameLazyDRoute = UsernameLazyDImport.update({
  path: '/lazy/d',
  getParentRoute: () => UsernameLazyRoute,
} as any)

const LoginLazyDRoute = LoginLazyDImport.update({
  path: '/lazy/d',
  getParentRoute: () => LoginLazyRoute,
} as any)

const IndexLazyDRoute = IndexLazyDImport.update({
  path: '/index/lazy/d',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/username': {
      id: '/username'
      path: '/username'
      fullPath: '/username'
      preLoaderRoute: typeof UsernameLazyImport
      parentRoute: typeof rootRoute
    }
    '/__root/d': {
      id: '/__root/d'
      path: '/d'
      fullPath: '/d'
      preLoaderRoute: typeof rootDImport
      parentRoute: typeof rootRoute
    }
    '/index/lazy/d': {
      id: '/index/lazy/d'
      path: '/index/lazy/d'
      fullPath: '/index/lazy/d'
      preLoaderRoute: typeof IndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/login/lazy/d': {
      id: '/login/lazy/d'
      path: '/lazy/d'
      fullPath: '/login/lazy/d'
      preLoaderRoute: typeof LoginLazyDImport
      parentRoute: typeof LoginLazyImport
    }
    '/username/lazy/d': {
      id: '/username/lazy/d'
      path: '/lazy/d'
      fullPath: '/username/lazy/d'
      preLoaderRoute: typeof UsernameLazyDImport
      parentRoute: typeof UsernameLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute.addChildren({ LoginLazyDRoute }),
  UsernameLazyRoute: UsernameLazyRoute.addChildren({ UsernameLazyDRoute }),
  rootDRoute,
  IndexLazyDRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.js",
      "children": [
        "/",
        "/login",
        "/username",
        "/__root/d",
        "/index/lazy/d"
      ]
    },
    "/": {
      "filePath": "index.lazy.js"
    },
    "/login": {
      "filePath": "login.lazy.js",
      "children": [
        "/login/lazy/d"
      ]
    },
    "/username": {
      "filePath": "username.lazy.js",
      "children": [
        "/username/lazy/d"
      ]
    },
    "/__root/d": {
      "filePath": "__root.d.ts"
    },
    "/index/lazy/d": {
      "filePath": "index.lazy.d.ts"
    },
    "/login/lazy/d": {
      "filePath": "login.lazy.d.ts",
      "parent": "/login"
    },
    "/username/lazy/d": {
      "filePath": "username.lazy.d.ts",
      "parent": "/username"
    }
  }
}
ROUTE_MANIFEST_END */
